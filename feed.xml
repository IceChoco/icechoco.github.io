<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://icechoco.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://icechoco.github.io/" rel="alternate" type="text/html" hreflang="en" /><updated>2021-09-23T00:08:06+09:00</updated><id>https://icechoco.github.io/feed.xml</id><title type="html">IceChoco</title><subtitle>Hydejack is a boutique Jekyll theme for hackers, nerds, and academics, with a focus on personal sites that are meant to impress.
</subtitle><author><name>Ara cho(IceChoco)</name><email>dkfk2685@naver.com</email></author><entry><title type="html">회원가입기능 만들기</title><link href="https://icechoco.github.io/react/2021-09-22-Create-member-registration-function/" rel="alternate" type="text/html" title="회원가입기능 만들기" /><published>2021-09-22T00:00:00+09:00</published><updated>2021-09-23T00:02:45+09:00</updated><id>https://icechoco.github.io/react/Create-member-registration-function</id><content type="html" xml:base="https://icechoco.github.io/react/2021-09-22-Create-member-registration-function/">&lt;p&gt;client에서 이름, e-maile, PW 등을 입력 후 서버에 보내주면 서버에서 그 데이터를 받아야 합니다. 서버에서 클라이언트로 부터 데이터를 받을 때 bodyParser라는 dependencies가 필요합니다. 이 dependencies를 이용하여 Client에서 보내주는 자료들을 이름, e-maile, PW를 받을 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;bodyparser-다운받기&quot;&gt;bodyParser 다운받기&lt;/h2&gt;
&lt;p&gt;아래 명렁어를 터미널에 입력하여 다운받습니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install body-parser --save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;지금은 로그인을 하거나, 회원가입할 때 만들어준 클라이언트가 없습니다. 그러므로 데이터를 클라이언트에 보내줄 수가 없으므로 대처하기 위해 postman을 다운받을 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;postman-다운받기&quot;&gt;postman 다운받기&lt;/h2&gt;

&lt;!--author--&gt;</content><author><name>Ara cho(IceChoco)</name><email>dkfk2685@naver.com</email></author><category term="react" /><category term="Web" /><category term="React" /><summary type="html">client에서 이름, e-maile, PW 등을 입력 후 서버에 보내주면 서버에서 그 데이터를 받아야 합니다. 서버에서 클라이언트로 부터 데이터를 받을 때 bodyParser라는 dependencies가 필요합니다. 이 dependencies를 이용하여 Client에서 보내주는 자료들을 이름, e-maile, PW를 받을 수 있습니다.</summary></entry><entry><title type="html">window 환경에서 ssh-agent 실행 시 git bash 무반응 문제</title><link href="https://icechoco.github.io/git/2021-09-21-Solve-git-bash-problem-when-running-ssh-agent-in-windows/" rel="alternate" type="text/html" title="window 환경에서 ssh-agent 실행 시 git bash 무반응 문제" /><published>2021-09-21T00:00:00+09:00</published><updated>2021-09-23T00:02:45+09:00</updated><id>https://icechoco.github.io/git/Solve-git-bash-problem-when-running-ssh-agent-in-windows</id><content type="html" xml:base="https://icechoco.github.io/git/2021-09-21-Solve-git-bash-problem-when-running-ssh-agent-in-windows/">&lt;p&gt;오늘의 삽질 하나 추가&lt;/p&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;SSH Agent를 Background에 실행시키기위해 아래 명령어를 입력하였다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;eval &quot;$(ssh-agent -s)&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;그런데 명렁어를 입력한 다음 줄에 커서가 깜빡이면서 아무런 반응이 일어나지 않았다.&lt;/p&gt;

&lt;h2 id=&quot;시도해본-것들&quot;&gt;시도해본 것들&lt;/h2&gt;
&lt;h3 id=&quot;1-창-종료-후-재시도&quot;&gt;1. 창 종료 후 재시도&lt;/h3&gt;
&lt;p&gt;Git Bash 창 강제 종료 후 새로운 Git Bash 관리자 권한으로 실행 후 다시 입력해보고 계속 반복하였으나 현상은 똑같았다.&lt;/p&gt;

&lt;h3 id=&quot;2-구글링&quot;&gt;2. 구글링&lt;/h3&gt;
&lt;p&gt;그래서 구글에 Gib Bash 멈춤, 무반응, 커서 깜빡임 등 다양하게 쳐보면서 구글링을 계속 이어갔지만 마땅한 해결책을 찾을 수 없었다. 흐아 너무 스트레스,,,,&lt;/p&gt;

&lt;p&gt;그러던 와중에 갑자기 컴퓨터가 너무 느려지다 못해 구글이 강제로 꺼지는 등 이상한 현상을 발견했다. 작업관리자를 켜봤더니 백그라운드에서 ssh-agent 여러개가 이미 실행되고 있었고 CPU가 99%와 100%를 왔다갔다했다ㄷㄷ&lt;/p&gt;

&lt;h3 id=&quot;3-ssh-add-하기&quot;&gt;3. ssh-add 하기&lt;/h3&gt;
&lt;p&gt;이상함을 감지하고 명령어는 정상 실행됐으나 Git bash가 결과를 출력하지 못하는구나 라는 생각이 들면서 다음 스텝인 ssh-add를 실행했다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-add ~/.ssh/id_ed25519
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위 명령어를 사용하던 중에 아래 오류를 만났다.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Could not open a connection to your authentication agent.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;위 메시지의 발생 원인은 어떤 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-agent&lt;/code&gt;를 사용해야 할 지 모르기 때문이다. 머신에서 한 번도 설정하지 않은 경우에 발생할 수 있다. 그럼 SSH Agent가 Background에서 정상 실행되지 않은거네,,,,? 그럼 이건 패스&lt;/p&gt;

&lt;h2 id=&quot;해결책&quot;&gt;해결책&lt;/h2&gt;
&lt;p&gt;진짜 얻어걸린 해결책,,,&lt;/p&gt;

&lt;p&gt;백그라운드에서 ssh-agent가 1개도 수행되고 있지 않은 클린한 상태에서&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Git Bash에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eval &quot;$(ssh-agent -s)&quot;&lt;/code&gt; 입력하기&lt;/li&gt;
  &lt;li&gt;작업관리자에서 실행중인 ssh-agent 우클릭 후 작업 끝내기&lt;/li&gt;
  &lt;li&gt;Git Bash로 돌아가면 무반응상태에서 나의 ssh-agent pid가 출력된다.&lt;br /&gt;
&lt;img src=&quot;/assets\img/ssh-agent-pid.png&quot; alt=&quot;ssh-agent-pid&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;^^,,,, 이것 때문에 내 소중한 시간을 펑펑썼다니,,, 행복하다^^,,,,&lt;/p&gt;

&lt;h2 id=&quot;참고&quot;&gt;참고&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ohgyun.com/483&quot;&gt;꿀벌개발일지::ssh-add 에서 authentication agent 문제&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- author --&gt;</content><author><name>Ara cho(IceChoco)</name><email>dkfk2685@naver.com</email></author><category term="git" /><category term="Git" /><category term="ssh-agent" /><category term="git-bash" /><summary type="html">오늘의 삽질 하나 추가</summary></entry><entry><title type="html">Hydejack 테마 Custmomization</title><link href="https://icechoco.github.io/jekyll/2021-09-20-Hydejack-theme-Custmomization/" rel="alternate" type="text/html" title="Hydejack 테마 Custmomization" /><published>2021-09-20T00:00:00+09:00</published><updated>2021-09-23T00:02:45+09:00</updated><id>https://icechoco.github.io/jekyll/Hydejack-theme-Custmomization</id><content type="html" xml:base="https://icechoco.github.io/jekyll/2021-09-20-Hydejack-theme-Custmomization/">&lt;p&gt;Hydejack 테마 Custmomization에 관한 내용입니다.&lt;/p&gt;

&lt;h2 id=&quot;사용자-지정-css-추가&quot;&gt;사용자 지정 CSS 추가&lt;/h2&gt;
&lt;h3 id=&quot;above-the-fold-contents&quot;&gt;above-the-fold contents?&lt;/h3&gt;
&lt;p&gt;아무런 행동을 하지 않은 기본 화면을 UX 업계에서는 &lt;strong&gt;‘Above the Fold’&lt;/strong&gt;라고 지칭합니다.&lt;/p&gt;

&lt;p&gt;지금 우리의 사회와 생활에 크게 밀접해 있는 웹이 사용자들에게 효율적으로 전달되기를 연구하는 것처럼, 과거 신문이 미디어 산업을 주도할 때 신문이 사용자들에게 어떻게 하면 관심을 끌고 잘 전달됨으로써 구매로 이어질 수 있을지에 대한 많은 에디터들의 고민이 있었습니다.&lt;/p&gt;

&lt;p&gt;그때 가판대에 접혀져 놓인 신문이 소비자에게 제일 먼저 보이는 영역을 ‘Above the Fold’라고 일컬었고, 지금 &lt;strong&gt;웹 사이트에서 스크롤로 가려지지 않은 채 사용자에게 제일 먼저 보이는 영역&lt;/strong&gt; 또한 ‘Above the Fold’라 불리고 있으며 반대 의미인 스크롤로 가려진 아래 영역은 ‘Below the Fold’라 합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;관련사이트 - &lt;a href=&quot;https://www.beusable.net/blog/?p=1724&quot;&gt;Above The Fold란?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;css-추가-방법&quot;&gt;CSS 추가 방법&lt;/h3&gt;
&lt;p&gt;Hydejack 테마에 CSS를 커스텀하는 가장 빠르고 안전한 방법은 _sass/my-inline.scss 파일과 _sass/my-style.scss 파일을 통한 방법입니다. 만약 해당 폴더 및 파일이 없다면 생성하시면 됩니다.&lt;/p&gt;

&lt;p&gt;above the fold 영역에 대한 css 규칙은 my-inline.scss에 기술합니다. 그 외 영역에 대한 css 규칙은 my-style.scss에 기술합니다.
단, 이 구분은 no_inline_css가 활성화된 경우 효과가 없습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets\img/custom-css-file-path.png&quot; alt=&quot;custom-css-file-path&quot; /&gt;&lt;/p&gt;

&lt;!--author--&gt;</content><author><name>Ara cho(IceChoco)</name><email>dkfk2685@naver.com</email></author><category term="jekyll" /><category term="Web" /><category term="Jekyll" /><summary type="html">Hydejack 테마 Custmomization에 관한 내용입니다.</summary></entry><entry><title type="html">Mongo DB란?</title><link href="https://icechoco.github.io/database/2021-09-20-What-is-Mongo-db/" rel="alternate" type="text/html" title="Mongo DB란?" /><published>2021-09-20T00:00:00+09:00</published><updated>2021-09-23T00:02:45+09:00</updated><id>https://icechoco.github.io/database/What-is-Mongo-db</id><content type="html" xml:base="https://icechoco.github.io/database/2021-09-20-What-is-Mongo-db/">&lt;p&gt;회사에서는 주로 oracle을 많이 사용하고, 다른 SQL을 사용할 기회가 오면 PostgreSQL를 잠깐 사용하고 있습니다. 그런데 RDBMS의 경우 저장할 데이터가 정형화되어있어 많은 양, 다양한 종류의 데이터를 저장하기에는 적합하지 않습니다. 그러다보니 네이버와 카카오, NHN 등 국내 140여 기업이 몽고DB 데이터베이스관리시스템(DBMS)을 사용하고 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;mongo-db의-인기&quot;&gt;Mongo DB의 인기&lt;/h2&gt;
&lt;p&gt;Mongo DB는 가장 유명한 No SQL DB입니다. 
&lt;img src=&quot;/assets\img/mongodb-survery.png&quot; alt=&quot;mongodb-survery&quot; /&gt;
스택오버플로우의 설문조사에 의하면, MongoDB는 DB 기술 중 5위로 인기가 좋습니다. 또한, 4위까지는 RDBMS인 점을 감안하면 MongoDB는 No SQL 중 가장 인기가 좋습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets\img/mongodb-survery-most.png&quot; alt=&quot;mongodb-survery-most&quot; /&gt;
가장 원하는 DB 설문조사에서는 Mongo DB가 1위를 차지하였습니다. 앞으로 Mongo DB를 배우고자 하는 사람이 많은 것을 알 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;mongoose&quot;&gt;Mongoose&lt;/h2&gt;
&lt;p&gt;Mongo DB를 편하게 사용할 수 있게 해주는 툴입니다. 설치방법은 터미널에 아래 명령어를 입력하면 됩니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install mongoose --save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets\img/mongoose-package-json.png&quot; alt=&quot;mongoose-package-json&quot; /&gt;&lt;br /&gt;
위 명령어를 입력함으로써 package.json 파일의 dependencies 안에 mongoose 버전이 추가된 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;mongodb-model이란&quot;&gt;MongoDB Model이란?&lt;/h2&gt;
&lt;p&gt;Model은 &lt;strong&gt;스키마를 감싸주는 역할&lt;/strong&gt;을 합니다. 여기서 스키마는 하나하나의 정보들을 지정해주는 역할을 합니다.&lt;br /&gt;
예를 들어 상품 판매 사이트의 경우 글의 작성자, 제목, 상세 설명이 필요할 것입니다.&lt;br /&gt;
그럼 제목과 상세설명의 타입은 String이다, 제목의 최대값은 50이다와 같이 구조를 지정해줄 수 있는데 이것이 바로 스키마입니다.&lt;br /&gt;
→ 업무에서 사용하는 데이터셋인 DVO(Data Value Object)와 비슷해보인다.&lt;/p&gt;

&lt;!--author--&gt;</content><author><name>Ara cho(IceChoco)</name><email>dkfk2685@naver.com</email></author><category term="database" /><category term="database" /><category term="React" /><summary type="html">회사에서는 주로 oracle을 많이 사용하고, 다른 SQL을 사용할 기회가 오면 PostgreSQL를 잠깐 사용하고 있습니다. 그런데 RDBMS의 경우 저장할 데이터가 정형화되어있어 많은 양, 다양한 종류의 데이터를 저장하기에는 적합하지 않습니다. 그러다보니 네이버와 카카오, NHN 등 국내 140여 기업이 몽고DB 데이터베이스관리시스템(DBMS)을 사용하고 있습니다.</summary></entry><entry><title type="html">React 기초</title><link href="https://icechoco.github.io/react/2021-09-20-React-%EA%B8%B0%EC%B4%88/" rel="alternate" type="text/html" title="React 기초" /><published>2021-09-20T00:00:00+09:00</published><updated>2021-09-23T00:02:45+09:00</updated><id>https://icechoco.github.io/react/React-%EA%B8%B0%EC%B4%88</id><content type="html" xml:base="https://icechoco.github.io/react/2021-09-20-React-%EA%B8%B0%EC%B4%88/">&lt;p&gt;오늘은 첫 개인 프로젝트를 시작하기 전 필요한 기초 지식을 공유드리겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;nodejs&quot;&gt;node.js&lt;/h2&gt;
&lt;p&gt;우선, node.js가 무엇인지 알아야겠죠? 이전에 자바스크립트는 크롬이나, IE와 같은 익스플로러 상에서만 사용이 가능했습니다. 그런데 node.js가 등장하고 나서 부터 자바스크립트를 서버사이드에서도 자바스크립트 사용이 가능해졌습니다.&lt;/p&gt;

&lt;h2 id=&quot;expressjs&quot;&gt;express.js&lt;/h2&gt;
&lt;p&gt;node.js를 이용해서 웹사이트나 어플리케이션을 쉽게 만들 수 있도록 도와주는 프레임워크입니다.
터미널을 실행하여 아래 명렁어를 실행하면 설치할 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install express --save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets\img/download-express-js.png&quot; alt=&quot;download-express-js&quot; /&gt;&lt;/p&gt;

&lt;p&gt;npm install 명령어 맨 뒤에 –save 명령어를 입력함으로써 package.json 파일의 dependencies 안에 express 버전이 추가된 것을 확인할 수 있습니다. 이렇게 추가를 해둠으로써 다른 사람이 봤을 때 쓰고있구나 하고 알 수 있게 해주는 역할을 합니다.&lt;/p&gt;

&lt;h2 id=&quot;indexjs&quot;&gt;index.js&lt;/h2&gt;
&lt;p&gt;백엔드 서버를 시작하면 index.js 파일에서 시작합니다.&lt;/p&gt;

&lt;h2 id=&quot;node_modules&quot;&gt;node_modules&lt;/h2&gt;
&lt;p&gt;다운받은 dependencies들 즉 라이브러리들이 이 폴더안에 들어가 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;npm-run-scripts&quot;&gt;npm run {scripts}&lt;/h2&gt;
&lt;p&gt;npm run {scripts} 수행 시 package.json 파일 안에 있는 scripts에 적혀있는 대로 수행된다. 예를 들어 package.json 파일의 scripts 부분이 아래와 같이 명시되어 있는 상태에서 npm run start를 수행한 경우 루트 경로에 있는 index.js가 수행된다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &quot;scripts&quot;: {
    &quot;start&quot;: &quot;node index.js&quot;,       //npm run start
    &quot;build&quot;: &quot;react-scripts build&quot;, //npm run build
    &quot;test&quot;: &quot;react-scripts test&quot;,   //npm run test
    &quot;eject&quot;: &quot;react-scripts eject&quot;  //npm run eject
  },
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;!--author--&gt;</content><author><name>Ara cho(IceChoco)</name><email>dkfk2685@naver.com</email></author><category term="react" /><category term="Web" /><category term="React" /><summary type="html">오늘은 첫 개인 프로젝트를 시작하기 전 필요한 기초 지식을 공유드리겠습니다.</summary></entry><entry><title type="html">Mongo DB 관련 오류</title><link href="https://icechoco.github.io/database/2021-09-20-Mongo-DB-related-errors/" rel="alternate" type="text/html" title="Mongo DB 관련 오류" /><published>2021-09-20T00:00:00+09:00</published><updated>2021-09-23T00:02:45+09:00</updated><id>https://icechoco.github.io/database/Mongo-DB-related-errors</id><content type="html" xml:base="https://icechoco.github.io/database/2021-09-20-Mongo-DB-related-errors/">&lt;p&gt;MongoDB 관련하여 발생할 수 있는 오류 List 및 해결방법 입니다.&lt;/p&gt;

&lt;h2 id=&quot;1-mongoservererror-bad-auth--authentication-failed&quot;&gt;1. MongoServerError: bad auth : Authentication failed.&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:\Ara\react-project\to-do-list&amp;gt; npm run start

&amp;gt; to-do-list@0.1.0 start C:\Ara\react-project\to-do-list
&amp;gt; node index.js

MongoServerError: bad auth : Authentication failed.
    at MessageStream.messageHandler (C:\Ara\react-project\to-do-list\node_modules\mongodb\lib\cmap\connection.js:467:30)
    at MessageStream.emit (events.js:400:28)
    at processIncomingData (C:\Ara\react-project\to-do-list\node_modules\mongodb\lib\cmap\message_stream.js:108:16)
    at MessageStream._write (C:\Ara\react-project\to-do-list\node_modules\mongodb\lib\cmap\message_stream.js:28:9)
    at writeOrBuffer (internal/streams/writable.js:358:12)
    at MessageStream.Writable.write (internal/streams/writable.js:303:10)
    at TLSSocket.ondata (internal/streams/readable.js:726:22)
    at TLSSocket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:290:12)
    at readableAddChunk (internal/streams/readable.js:265:9) {
  ok: 0,
  code: 8000,
  codeName: 'AtlasError'
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;저의 경우는 index.js 파일 내 MongoDB 설정 시 패스워드 양 옆에 &amp;lt;&amp;gt;를 제거하지 않아 발생한 에러였습니다.&lt;br /&gt;
설정을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;my_login_id:&amp;lt;my_password&amp;gt;&lt;/code&gt;로 했었으나, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;my_login_id:my_password&lt;/code&gt;와 같이 &amp;lt;&amp;gt;를 제거해야 합니다.&lt;/p&gt;

&lt;!--author--&gt;</content><author><name>Ara cho(IceChoco)</name><email>dkfk2685@naver.com</email></author><category term="database" /><category term="database" /><category term="React" /><summary type="html">MongoDB 관련하여 발생할 수 있는 오류 List 및 해결방법 입니다.</summary></entry><entry><title type="html">React 관련 오류</title><link href="https://icechoco.github.io/react/2021-09-19-React-related-errors/" rel="alternate" type="text/html" title="React 관련 오류" /><published>2021-09-19T00:00:00+09:00</published><updated>2021-09-23T00:02:45+09:00</updated><id>https://icechoco.github.io/react/React-related-errors</id><content type="html" xml:base="https://icechoco.github.io/react/2021-09-19-React-related-errors/">&lt;p&gt;React 관련하여 발생할 수 있는 오류 List 및 해결방법 입니다.&lt;/p&gt;

&lt;h2 id=&quot;1-스크립트-실행-오류&quot;&gt;1. 스크립트 실행 오류&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create-react-app : 이 시스템에서 스크립트를 실행할 수 없으므로 ~\AppData\Roaming\npm\creat
e-react-app.ps1 파일을 로드할 수 없습니다. 자세한 내용은 about_Execution_Policies(https://go.microsoft.
com/fwlink/?LinkID=135170)를 참조하십시오.
위치 줄:1 문자:1
+ create-react-app my-app
+ ~~~~~~~~~~~~~~~~
    + CategoryInfo          : 보안 오류: (:) [], PSSecurityException
    + FullyQualifiedErrorId : UnauthorizedAccess
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;1) windows PowerShell 프로그램을 관리자 권한으로 실행합니다.&lt;br /&gt;
2) 아래와 같은 명령어를 작성하면 컴퓨터의 실행정책이 어떻게 설정되어 있는지 확인할 수 있습니다.&lt;br /&gt;
    &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;
    Get-ExecutionPolicy
   &lt;/code&gt;&lt;/p&gt;

&lt;p&gt;별다른 설정 변경을 하지 않았다면, Windows 10 PC에서는 Restricted로 보입니다. 저도 Get-ExecutionPolicy에 아무런 argument를 입력하지 않았기 떄문에 아래처럼 기본값이 보이고 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets\img/script-excution-error-now.png&quot; alt=&quot;script-excution-error-now&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3) 권한이 RemoteSigned 가 아니라면 Set-ExecutionPolicy RemoteSigned 를 입력합니다.&lt;br /&gt;
    &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;
    Set-ExecutionPolicy RemoteSigned
   &lt;/code&gt;
    &lt;img src=&quot;/assets\img/script-excution-error-now2.png&quot; alt=&quot;script-excution-error-now2&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;remoteSigned란?&lt;/strong&gt;&lt;br /&gt;
  이 값은 최신 Windows Server 버전(Windows Server 2012 R2 이후)의 Powershell 실행정책 기본값입니다.&lt;br /&gt;
  해당 로컬 컴퓨터에서 에서 작성된 모든 스크립트는 실행이 가능하며, 인터넷에서 다운로드(IE, 크롬, 파이어폭스, 아웃룩 등)한 스크립트는 인증기관이 발행한 코드로 서명되어야만 실행이 가능합니다. 인터넷 이외의 소스로부터 다운로드 받거나 서명은 되었지만 악의적인 목적이 있는 스크립트는 위험이 있을 수도 있습니다.&lt;br /&gt;
  Microsoft Windows PowerShell 팀에서 권장할 만큼 가장 많이 설정되는 값이며, 보안과 편리함의 균형을 어느정도 확보할 수 있습니다. 하지만 스크립트가 &lt;strong&gt;반드시 실행되어야 하는 컴퓨터에서만 사용하는 것이 바람직&lt;/strong&gt;합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;!--author--&gt;</content><author><name>Ara cho(IceChoco)</name><email>dkfk2685@naver.com</email></author><category term="react" /><category term="Web" /><category term="React" /><summary type="html">React 관련하여 발생할 수 있는 오류 List 및 해결방법 입니다.</summary></entry><entry><title type="html">Markdown 문법</title><link href="https://icechoco.github.io/jekyll/2021-09-15-Markdown-%EB%AC%B8%EB%B2%95/" rel="alternate" type="text/html" title="Markdown 문법" /><published>2021-09-15T00:00:00+09:00</published><updated>2021-09-23T00:02:45+09:00</updated><id>https://icechoco.github.io/jekyll/Markdown-%EB%AC%B8%EB%B2%95</id><content type="html" xml:base="https://icechoco.github.io/jekyll/2021-09-15-Markdown-%EB%AC%B8%EB%B2%95/">&lt;!-- 여기에 목차넣으면 좋을듯,,,, --&gt;
&lt;p&gt;🔔 Github 블로그를 만들기 위해 꼭 필요한 Markdown 문법에 대해 소개해드리겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;개행new-line&quot;&gt;개행(New Line)&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;Markdown에서 개행은 두가지 방식이 있습니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;강제개행: 문장의 마지막에 공백(  )을 두 번 입력&lt;/li&gt;
  &lt;li&gt;단락바꿈: Enter키를 두번 입력&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;아래는 문법 예제입니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;강제개행 문법입니다.  
문장끝의 공백을 통해 개행이 적용됩니다.  

단락바꿈 문법입니다.

Enter키를 통해 개행이 적용됩니다. 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;제목heading&quot;&gt;제목(Heading)&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;문서제목&quot;&gt;문서제목&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;마크다운 작성 시
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;문서제목 결과입니다.
======
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;결과&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;문서제목-결과입니다&quot;&gt;문서제목 결과입니다.&lt;/h1&gt;

&lt;h3 id=&quot;문서부제목&quot;&gt;문서부제목&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;마크다운 작성 시
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;문서 부제목 결과입니다.
------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;문서-부제목-결과입니다&quot;&gt;문서 부제목 결과입니다.&lt;/h2&gt;

&lt;h3 id=&quot;글머리&quot;&gt;글머리&lt;/h3&gt;
&lt;p&gt;HTML의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;~&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; 태그와 유사하며 1~6까지만 지원합니다. #의 개수에 따라 글자의 크기가 달라집니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt;은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;###&lt;/code&gt;은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h3&amp;gt;&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;######&lt;/code&gt;은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h6&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# H1
## H2
### H3
#### H4
##### H5
###### H6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;h1&quot;&gt;H1&lt;/h1&gt;
&lt;h2 id=&quot;h2&quot;&gt;H2&lt;/h2&gt;
&lt;h3 id=&quot;h3&quot;&gt;H3&lt;/h3&gt;
&lt;h4 id=&quot;h4&quot;&gt;H4&lt;/h4&gt;
&lt;h5 id=&quot;h5&quot;&gt;H5&lt;/h5&gt;
&lt;h6 id=&quot;h6&quot;&gt;H6&lt;/h6&gt;

&lt;h2 id=&quot;텍스트&quot;&gt;텍스트&lt;/h2&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;글씨색&quot;&gt;글씨색&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;span style=&quot;color:yellow&quot;&amp;gt;노란 글씨입니다.&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;span style=&quot;color:yellow&quot;&gt;노란 글씨입니다.&lt;/span&gt;&lt;/p&gt;

&lt;!--author--&gt;</content><author><name>Ara cho(IceChoco)</name><email>dkfk2685@naver.com</email></author><category term="jekyll" /><category term="Blog" /><category term="Jekyll" /><category term="Web" /><category term="Markdown" /><category term="HTML" /><summary type="html">🔔 Github 블로그를 만들기 위해 꼭 필요한 Markdown 문법에 대해 소개해드리겠습니다.</summary></entry><entry><title type="html">Git 사용법</title><link href="https://icechoco.github.io/git/2021-09-15-How-to-use-git/" rel="alternate" type="text/html" title="Git 사용법" /><published>2021-09-15T00:00:00+09:00</published><updated>2021-09-23T00:02:45+09:00</updated><id>https://icechoco.github.io/git/How-to-use-git</id><content type="html" xml:base="https://icechoco.github.io/git/2021-09-15-How-to-use-git/">&lt;p&gt;안녕하세요. 아이스초코입니다. 오늘은 Github 블로그 만들기에 필요한 Git 사용법에 대해 소개해드리겠습니다.&lt;/p&gt;

&lt;p&gt;git이 이미 설치되어있는지 확인하기 위해서는 터미널에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git --version&lt;/code&gt;을 치면됩니다. 버전이 나오는 경우 이미 설치되어있는 것이고, 안나오는 경우 설치되어 있지 않은 것 입니다.&lt;/p&gt;

&lt;h2 id=&quot;용어&quot;&gt;&lt;strong&gt;용어&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Working Directory: 로컬PC에서 작업한 그대로의 상태&lt;br /&gt;
Staging Area: git add 후 커밋 대기중인 상태&lt;br /&gt;
git local repository: 내 로컬 PC에 위치한 repository&lt;br /&gt;
git remote repository: github에 위치한 repository&lt;br /&gt;
SSH: Secure Shell&lt;/p&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;git과-github의-차이&quot;&gt;&lt;strong&gt;Git과 GitHub의 차이&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Git: 소스코드를 관리할 수 있는 툴&lt;br /&gt;
GitHub: Git으로 관리하고 있는 소스들을 올릴 수 있는 클라우드 서비스&lt;/p&gt;

&lt;h2 id=&quot;git-파일-추적track과-커밋commit&quot;&gt;&lt;strong&gt;Git 파일 추적(Track)과 커밋(Commit)&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Git에서 파일 버전을 관리하기 위해서는 해당 파일을 &lt;span style=&quot;color:red&quot;&gt;&lt;strong&gt;추적(Track)&lt;/strong&gt;&lt;/span&gt;해야 합니다.&lt;br /&gt;
Git에서 추적한다는 의미는 그 파일을 관리한다는 의미입니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Track한다 = staging area에 올라갔다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;프로젝트 작업 폴더에는 Tracked 파일과 Untracked 파일이 존재합니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Tracked(관리대상이 된 파일, 추적되고 있는 상태)
    &lt;ul&gt;
      &lt;li&gt;Unmodified: 파일 내용 수정이 안된 상태&lt;/li&gt;
      &lt;li&gt;Modified : 파일 내용이 수정된 상태&lt;/li&gt;
      &lt;li&gt;Staged : 커밋으로 Git 저장소에 기록될 준비가 된 상태&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Untracked(관리대상이 아닌 파일, 즉 추적이 안 된 상태)&lt;/li&gt;
  &lt;li&gt;Commit(커밋): 파일을 Git 저장소에 기록하는 것, 어떤 작업인지에 대한 메시지를 기록&lt;/li&gt;
&lt;/ol&gt;

&lt;!--author--&gt;</content><author><name>Ara cho(IceChoco)</name><email>dkfk2685@naver.com</email></author><category term="git" /><category term="Git" /><category term="Web" /><category term="Jekyll" /><summary type="html">안녕하세요. 아이스초코입니다. 오늘은 Github 블로그 만들기에 필요한 Git 사용법에 대해 소개해드리겠습니다. git이 이미 설치되어있는지 확인하기 위해서는 터미널에서 git --version을 치면됩니다. 버전이 나오는 경우 이미 설치되어있는 것이고, 안나오는 경우 설치되어 있지 않은 것 입니다.</summary></entry><entry><title type="html">SSH를 이용해 GITHUB 연결하기</title><link href="https://icechoco.github.io/git/2021-09-15-Connecting-to-GITHUB-Using-SSH/" rel="alternate" type="text/html" title="SSH를 이용해 GITHUB 연결하기" /><published>2021-09-15T00:00:00+09:00</published><updated>2021-09-23T00:02:45+09:00</updated><id>https://icechoco.github.io/git/Connecting-to-GITHUB-Using-SSH</id><content type="html" xml:base="https://icechoco.github.io/git/2021-09-15-Connecting-to-GITHUB-Using-SSH/">&lt;p&gt;지금까지 github에서 소스를 클로닝(Cloning) 할 때, HTTP 연결을 통해 하였다. Cloning 하는데에 별문제 없이 잘 처리되었지만, 비번을 바꾸거나 할 때 처럼 인증 정보가 변경 되면, 재로그인을 하거나 Windows 자격 증명에서 Github 자격 증명을 갱신해주어야 한다. 비밀번호가 변경되더라도 인증정보를 갱신해야하는 번거로움 없는 SSH키를 이용한 Github와 연동하기를 시도해보았다.&lt;/p&gt;

&lt;h2 id=&quot;ssh-key-생성하기&quot;&gt;SSH KEY 생성하기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;CMD창을 연다&lt;/li&gt;
  &lt;li&gt;아래 텍스트에서 이메일 주소를 바꾼 뒤 붙여넣기 한다
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ssh-keygen -t ed25519 -C &quot;dkfk2685@naver.com&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enter file in which to save the key (경로):&lt;/code&gt;라는 메시지가 뜬다. 확인 후 엔터를 쳐주고 다음 메시지가 나와도 계속 엔터를 쳐주면 key 생성이 완료된다.
&lt;img src=&quot;/assets\img/generate-new-ssh-key.png&quot; alt=&quot;generate-new-ssh-key&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;자신의 홈 디렉토리 아래 .ssh 폴더 내 id_ed25519, id_ed25519.pub 2개의 파일이 생성되어 있다.
    &lt;ul&gt;
      &lt;li&gt;홈디렉토리 예시 C:\Users\dkfk2.ssh&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;나의-ssh-key를-sssh-agent에-추가하기&quot;&gt;나의 SSH Key를 SSSH Agent에 추가하기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;git bash에 아래 텍스트를 붙여넣기하여 백그라운드에서 ssh-agent를 실행한다.
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; eval &quot;$(ssh-agent -s)&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;SSH Private Key를 SSH-AGENT에 넣는다.&lt;br /&gt;
 아까 생성된 Key 2개 중 id_ed25519는 Private Key, id_ed25519.pub는 public Key 이다.
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ssh-add ~/.ssh/id_ed25519
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;/assets\img/ssh-agent-add.png&quot; alt=&quot;ssh-agent-add&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;public-ssh-key를-github에-추가하기&quot;&gt;public SSH Key를 gitHub에 추가하기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;git bash에 아래 텍스트를 붙여넣기하여 public SSH Key를 클립보드로 복사한다.
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; clip &amp;lt; ~/.ssh/id_ed25519.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;github에 들어가서 우측 상단 계정 버튼 클릭 - Settings 클릭한다.&lt;/li&gt;
  &lt;li&gt;좌측 목록에서 SSH and SPG Keys를 클릭한다.&lt;/li&gt;
  &lt;li&gt;초록색 버튼의 New SSH Key를 클릭한다.&lt;/li&gt;
  &lt;li&gt;key 영역에 클립보드에 복사된 SSH public key를 붙여넣기한다.&lt;/li&gt;
  &lt;li&gt;자신이 원하는 title을 입력하고 Add SSH Key를 클릭한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;SSH Key가 정상적으로 등록되어 컴퓨터와 gitHub 서버가 안전하게 통신할 수 있게 되었다.&lt;/p&gt;

&lt;h2 id=&quot;로컬에서-remote-repository로-push하기&quot;&gt;로컬에서 remote repository로 push하기&lt;/h2&gt;
&lt;p&gt;로컬 터미널에서 아래 명령어를 순차적으로 입력하면 to-do-list remote 레파지토리에 push가 정상적으로 완료된다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  echo &quot;# to-do-list&quot; &amp;gt;&amp;gt; README.md
  git remote add origin https://github.com/IceChoco/to-do-list.git  
  git branch -M main  
  git push -u origin main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;추천문서&quot;&gt;추천문서&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent&quot;&gt;Generating a new SSH key and adding it to the ssh-agent - GitHub Docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.lainyzine.com/ko/article/creating-ssh-key-for-github/#%EA%B3%B5%EA%B0%9C%ED%82%A4%EB%A5%BC-github-%EA%B3%84%EC%A0%95%EC%97%90-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0&quot;&gt;GitHub 접속 용 SSH 키 만드는 방법 - LainyZine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kindtis.tistory.com/606&quot;&gt;SSH 키로 깃헙에 연동하기 (Connecting to GitHub with SSH)- Game Programmer Life&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!--author--&gt;</content><author><name>Ara cho(IceChoco)</name><email>dkfk2685@naver.com</email></author><category term="git" /><category term="Git" /><category term="Web" /><category term="Jekyll" /><summary type="html">지금까지 github에서 소스를 클로닝(Cloning) 할 때, HTTP 연결을 통해 하였다. Cloning 하는데에 별문제 없이 잘 처리되었지만, 비번을 바꾸거나 할 때 처럼 인증 정보가 변경 되면, 재로그인을 하거나 Windows 자격 증명에서 Github 자격 증명을 갱신해주어야 한다. 비밀번호가 변경되더라도 인증정보를 갱신해야하는 번거로움 없는 SSH키를 이용한 Github와 연동하기를 시도해보았다.</summary></entry></feed>